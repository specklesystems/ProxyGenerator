<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <Version>0.1.10</Version>
        <TargetFramework>netstandard2.0</TargetFramework>
        <LangVersion>Latest</LangVersion>
        <Nullable>enable</Nullable>
        <Authors>Speckle</Authors>
        <RootNamespace>Speckle.ProxyGenerator</RootNamespace>
        <Title>Speckle.ProxyGenerator</Title>
        <PackageId>Speckle.ProxyGenerator</PackageId>
        <Description>This project uses Source Generation to generate an interface and a Proxy class for classes. This makes it possible to wrap external classes which do not have an interface, in a Proxy class which makes it easier to Mock and use DI.</Description>
        <PackageTags>class;interface;proxy;SourceGenerator;Analyzer;Generation;Generate;wrap</PackageTags>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildProjectDirectory)/../../PackageReleaseNotes.txt"))</PackageReleaseNotes>
        <PackageProjectUrl>https://github.com/specklesystems/ProxyGenerator</PackageProjectUrl>
        <RepositoryType>git</RepositoryType>
        <RepositoryUrl>https://github.com/specklesystems/ProxyGenerator</RepositoryUrl>
        <PackageReadmeFile>PackageReadme.md</PackageReadmeFile>
        <PackageIcon>icon.png</PackageIcon>
        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)Generated</CompilerGeneratedFilesOutputPath>
        <DevelopmentDependency>true</DevelopmentDependency>
        <ImplicitUsings>enable</ImplicitUsings>
        <Configurations>Debug;Release;DebugAttach</Configurations>
        <IsRoslynComponent>true</IsRoslynComponent>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    </PropertyGroup>

    <ItemGroup>
        <None Include="../../resources/icon.png" Pack="true" PackagePath="" />
        <None Include="../../PackageReadme.md" Pack="true" PackagePath="" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="IsExternalInit" Version="1.0.3">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.2.0" PrivateAssets="all" />
        <PackageReference Include="Nullable" Version="1.3.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <!--<ItemGroup>
        <ProjectCapability Include="DynamicDependentFile" />
        <ProjectCapability Include="DynamicFileNesting" />
    </ItemGroup>-->

    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>

    <!-- https://www.meziantou.net/declaring-internalsvisibleto-in-the-csproj.htm -->
    <ItemGroup>
        <!--<AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
            <_Parameter1>ProxyInterfaceSourceGeneratorTests</_Parameter1>
        </AssemblyAttribute>-->
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
            <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
        </AssemblyAttribute>
    </ItemGroup>

</Project>
